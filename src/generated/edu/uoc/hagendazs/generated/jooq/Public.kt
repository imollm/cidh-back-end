/*
 * This file is generated by jOOQ.
 */
package edu.uoc.hagendazs.generated.jooq


import edu.uoc.hagendazs.generated.jooq.tables.Category
import edu.uoc.hagendazs.generated.jooq.tables.Event
import edu.uoc.hagendazs.generated.jooq.tables.EventForumMessage
import edu.uoc.hagendazs.generated.jooq.tables.EventOrganizer
import edu.uoc.hagendazs.generated.jooq.tables.FlywaySchemaHistory
import edu.uoc.hagendazs.generated.jooq.tables.Label
import edu.uoc.hagendazs.generated.jooq.tables.LabelEvent
import edu.uoc.hagendazs.generated.jooq.tables.PasswordReset
import edu.uoc.hagendazs.generated.jooq.tables.RefreshToken
import edu.uoc.hagendazs.generated.jooq.tables.Role
import edu.uoc.hagendazs.generated.jooq.tables.User
import edu.uoc.hagendazs.generated.jooq.tables.UserEventComment
import edu.uoc.hagendazs.generated.jooq.tables.UserEventFavorites
import edu.uoc.hagendazs.generated.jooq.tables.UserEventRating
import edu.uoc.hagendazs.generated.jooq.tables.UserEventSubscription
import edu.uoc.hagendazs.generated.jooq.tables.UserRole

import kotlin.collections.List

import org.jooq.Catalog
import org.jooq.Table
import org.jooq.impl.SchemaImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class Public : SchemaImpl("public", DefaultCatalog.DEFAULT_CATALOG) {
    companion object {

        /**
         * The reference instance of <code>public</code>
         */
        val PUBLIC = Public()
    }

    /**
     * The table <code>public.category</code>.
     */
    val CATEGORY get() = Category.CATEGORY

    /**
     * The table <code>public.event</code>.
     */
    val EVENT get() = Event.EVENT

    /**
     * The table <code>public.event_forum_message</code>.
     */
    val EVENT_FORUM_MESSAGE get() = EventForumMessage.EVENT_FORUM_MESSAGE

    /**
     * The table <code>public.event_organizer</code>.
     */
    val EVENT_ORGANIZER get() = EventOrganizer.EVENT_ORGANIZER

    /**
     * The table <code>public.flyway_schema_history</code>.
     */
    val FLYWAY_SCHEMA_HISTORY get() = FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY

    /**
     * The table <code>public.label</code>.
     */
    val LABEL get() = Label.LABEL

    /**
     * The table <code>public.label_event</code>.
     */
    val LABEL_EVENT get() = LabelEvent.LABEL_EVENT

    /**
     * The table <code>public.password_reset</code>.
     */
    val PASSWORD_RESET get() = PasswordReset.PASSWORD_RESET

    /**
     * The table <code>public.refresh_token</code>.
     */
    val REFRESH_TOKEN get() = RefreshToken.REFRESH_TOKEN

    /**
     * The table <code>public.role</code>.
     */
    val ROLE get() = Role.ROLE

    /**
     * The table <code>public.user</code>.
     */
    val USER get() = User.USER

    /**
     * The table <code>public.user_event_comment</code>.
     */
    val USER_EVENT_COMMENT get() = UserEventComment.USER_EVENT_COMMENT

    /**
     * The table <code>public.user_event_favorites</code>.
     */
    val USER_EVENT_FAVORITES get() = UserEventFavorites.USER_EVENT_FAVORITES

    /**
     * The table <code>public.user_event_rating</code>.
     */
    val USER_EVENT_RATING get() = UserEventRating.USER_EVENT_RATING

    /**
     * The table <code>public.user_event_subscription</code>.
     */
    val USER_EVENT_SUBSCRIPTION get() = UserEventSubscription.USER_EVENT_SUBSCRIPTION

    /**
     * The table <code>public.user_role</code>.
     */
    val USER_ROLE get() = UserRole.USER_ROLE

    override fun getCatalog(): Catalog = DefaultCatalog.DEFAULT_CATALOG

    override fun getTables(): List<Table<*>> = listOf(
        Category.CATEGORY,
        Event.EVENT,
        EventForumMessage.EVENT_FORUM_MESSAGE,
        EventOrganizer.EVENT_ORGANIZER,
        FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY,
        Label.LABEL,
        LabelEvent.LABEL_EVENT,
        PasswordReset.PASSWORD_RESET,
        RefreshToken.REFRESH_TOKEN,
        Role.ROLE,
        User.USER,
        UserEventComment.USER_EVENT_COMMENT,
        UserEventFavorites.USER_EVENT_FAVORITES,
        UserEventRating.USER_EVENT_RATING,
        UserEventSubscription.USER_EVENT_SUBSCRIPTION,
        UserRole.USER_ROLE
    )
}
