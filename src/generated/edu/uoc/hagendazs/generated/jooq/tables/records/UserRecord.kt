/*
 * This file is generated by jOOQ.
 */
package edu.uoc.hagendazs.generated.jooq.tables.records


import edu.uoc.hagendazs.generated.jooq.tables.User
import edu.uoc.hagendazs.macadamianut.application.user.model.dataClass.SystemLanguage

import java.time.LocalDateTime

import org.jooq.Field
import org.jooq.Record1
import org.jooq.Record12
import org.jooq.Row12
import org.jooq.impl.UpdatableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class UserRecord() : UpdatableRecordImpl<UserRecord>(User.USER), Record12<String?, String?, String?, String?, String?, String?, String?, Boolean?, SystemLanguage?, String?, LocalDateTime?, LocalDateTime?> {

    var id: String?
        set(value) = set(0, value)
        get() = get(0) as String?

    var firstName: String?
        set(value) = set(1, value)
        get() = get(1) as String?

    var lastName: String?
        set(value) = set(2, value)
        get() = get(2) as String?

    var fiscalId: String?
        set(value) = set(3, value)
        get() = get(3) as String?

    var address: String?
        set(value) = set(4, value)
        get() = get(4) as String?

    var email: String?
        set(value) = set(5, value)
        get() = get(5) as String?

    var emailToken: String?
        set(value) = set(6, value)
        get() = get(6) as String?

    var isValidEmail: Boolean?
        set(value) = set(7, value)
        get() = get(7) as Boolean?

    var preferredLanguage: SystemLanguage?
        set(value) = set(8, value)
        get() = get(8) as SystemLanguage?

    var password: String?
        set(value) = set(9, value)
        get() = get(9) as String?

    var deletedAt: LocalDateTime?
        set(value) = set(10, value)
        get() = get(10) as LocalDateTime?

    var createdAt: LocalDateTime?
        set(value) = set(11, value)
        get() = get(11) as LocalDateTime?

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record1<String?> = super.key() as Record1<String?>

    // -------------------------------------------------------------------------
    // Record12 type implementation
    // -------------------------------------------------------------------------

    override fun fieldsRow(): Row12<String?, String?, String?, String?, String?, String?, String?, Boolean?, SystemLanguage?, String?, LocalDateTime?, LocalDateTime?> = super.fieldsRow() as Row12<String?, String?, String?, String?, String?, String?, String?, Boolean?, SystemLanguage?, String?, LocalDateTime?, LocalDateTime?>
    override fun valuesRow(): Row12<String?, String?, String?, String?, String?, String?, String?, Boolean?, SystemLanguage?, String?, LocalDateTime?, LocalDateTime?> = super.valuesRow() as Row12<String?, String?, String?, String?, String?, String?, String?, Boolean?, SystemLanguage?, String?, LocalDateTime?, LocalDateTime?>
    override fun field1(): Field<String?> = User.USER.ID
    override fun field2(): Field<String?> = User.USER.FIRST_NAME
    override fun field3(): Field<String?> = User.USER.LAST_NAME
    override fun field4(): Field<String?> = User.USER.FISCAL_ID
    override fun field5(): Field<String?> = User.USER.ADDRESS
    override fun field6(): Field<String?> = User.USER.EMAIL
    override fun field7(): Field<String?> = User.USER.EMAIL_TOKEN
    override fun field8(): Field<Boolean?> = User.USER.IS_VALID_EMAIL
    override fun field9(): Field<SystemLanguage?> = User.USER.PREFERRED_LANGUAGE
    override fun field10(): Field<String?> = User.USER.PASSWORD
    override fun field11(): Field<LocalDateTime?> = User.USER.DELETED_AT
    override fun field12(): Field<LocalDateTime?> = User.USER.CREATED_AT
    override fun component1(): String? = id
    override fun component2(): String? = firstName
    override fun component3(): String? = lastName
    override fun component4(): String? = fiscalId
    override fun component5(): String? = address
    override fun component6(): String? = email
    override fun component7(): String? = emailToken
    override fun component8(): Boolean? = isValidEmail
    override fun component9(): SystemLanguage? = preferredLanguage
    override fun component10(): String? = password
    override fun component11(): LocalDateTime? = deletedAt
    override fun component12(): LocalDateTime? = createdAt
    override fun value1(): String? = id
    override fun value2(): String? = firstName
    override fun value3(): String? = lastName
    override fun value4(): String? = fiscalId
    override fun value5(): String? = address
    override fun value6(): String? = email
    override fun value7(): String? = emailToken
    override fun value8(): Boolean? = isValidEmail
    override fun value9(): SystemLanguage? = preferredLanguage
    override fun value10(): String? = password
    override fun value11(): LocalDateTime? = deletedAt
    override fun value12(): LocalDateTime? = createdAt

    override fun value1(value: String?): UserRecord {
        this.id = value
        return this
    }

    override fun value2(value: String?): UserRecord {
        this.firstName = value
        return this
    }

    override fun value3(value: String?): UserRecord {
        this.lastName = value
        return this
    }

    override fun value4(value: String?): UserRecord {
        this.fiscalId = value
        return this
    }

    override fun value5(value: String?): UserRecord {
        this.address = value
        return this
    }

    override fun value6(value: String?): UserRecord {
        this.email = value
        return this
    }

    override fun value7(value: String?): UserRecord {
        this.emailToken = value
        return this
    }

    override fun value8(value: Boolean?): UserRecord {
        this.isValidEmail = value
        return this
    }

    override fun value9(value: SystemLanguage?): UserRecord {
        this.preferredLanguage = value
        return this
    }

    override fun value10(value: String?): UserRecord {
        this.password = value
        return this
    }

    override fun value11(value: LocalDateTime?): UserRecord {
        this.deletedAt = value
        return this
    }

    override fun value12(value: LocalDateTime?): UserRecord {
        this.createdAt = value
        return this
    }

    override fun values(value1: String?, value2: String?, value3: String?, value4: String?, value5: String?, value6: String?, value7: String?, value8: Boolean?, value9: SystemLanguage?, value10: String?, value11: LocalDateTime?, value12: LocalDateTime?): UserRecord {
        this.value1(value1)
        this.value2(value2)
        this.value3(value3)
        this.value4(value4)
        this.value5(value5)
        this.value6(value6)
        this.value7(value7)
        this.value8(value8)
        this.value9(value9)
        this.value10(value10)
        this.value11(value11)
        this.value12(value12)
        return this
    }

    /**
     * Create a detached, initialised UserRecord
     */
    constructor(id: String? = null, firstName: String? = null, lastName: String? = null, fiscalId: String? = null, address: String? = null, email: String? = null, emailToken: String? = null, isValidEmail: Boolean? = null, preferredLanguage: SystemLanguage? = null, password: String? = null, deletedAt: LocalDateTime? = null, createdAt: LocalDateTime? = null): this() {
        this.id = id
        this.firstName = firstName
        this.lastName = lastName
        this.fiscalId = fiscalId
        this.address = address
        this.email = email
        this.emailToken = emailToken
        this.isValidEmail = isValidEmail
        this.preferredLanguage = preferredLanguage
        this.password = password
        this.deletedAt = deletedAt
        this.createdAt = createdAt
    }
}
